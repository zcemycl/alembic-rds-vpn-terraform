"""init all tables

Revision ID: 113a390286db
Revises:
Create Date: 2023-11-03 19:01:15.687813

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector
import example_package
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "113a390286db"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "article",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "factors", pgvector.sqlalchemy.Vector(dim=20), nullable=True
        ),
        sa.Column(
            "ts_vector",
            example_package.dataclasses.orm.TSVector(),
            sa.Computed(
                "to_tsvector('english', title || ' ' || description)",
                persisted=True,
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_article___ts_vector__",
        "article",
        ["ts_vector"],
        unique=False,
        postgresql_using="gin",
    )
    op.create_table(
        "person",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("firstname", sa.String(), nullable=True),
        sa.Column("lastname", sa.String(), nullable=True),
        sa.Column(
            "others", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "role",
            sa.Enum("developer", "maintainer", "viewer", name="role"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "skill",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "friendship",
        sa.Column("parent_person_id", sa.Integer(), nullable=False),
        sa.Column("child_person_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["child_person_id"], ["person.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["parent_person_id"], ["person.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("parent_person_id", "child_person_id"),
        sa.UniqueConstraint(
            "parent_person_id", "child_person_id", name="friendship_case"
        ),
    )
    op.create_index(
        op.f("ix_friendship_child_person_id"),
        "friendship",
        ["child_person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_friendship_parent_person_id"),
        "friendship",
        ["parent_person_id"],
        unique=False,
    )
    op.create_table(
        "person_skill_link",
        sa.Column("person_id", sa.Integer(), nullable=False),
        sa.Column("skill_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["person_id"], ["person.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["skill_id"], ["skill.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("person_id", "skill_id"),
        sa.UniqueConstraint("person_id", "skill_id", name="person_skill_case"),
    )
    op.create_index(
        op.f("ix_person_skill_link_person_id"),
        "person_skill_link",
        ["person_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_person_skill_link_skill_id"),
        "person_skill_link",
        ["skill_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_person_skill_link_skill_id"), table_name="person_skill_link"
    )
    op.drop_index(
        op.f("ix_person_skill_link_person_id"), table_name="person_skill_link"
    )
    op.drop_table("person_skill_link")
    op.drop_index(
        op.f("ix_friendship_parent_person_id"), table_name="friendship"
    )
    op.drop_index(
        op.f("ix_friendship_child_person_id"), table_name="friendship"
    )
    op.drop_table("friendship")
    op.drop_table("skill")
    op.drop_table("person")
    op.drop_index(
        "ix_article___ts_vector__",
        table_name="article",
        postgresql_using="gin",
    )
    op.drop_table("article")
    op.execute("DROP TYPE role;")
    # ### end Alembic commands ###
